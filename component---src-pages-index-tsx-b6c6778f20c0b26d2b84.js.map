{"version":3,"sources":["webpack:///./src/components/ProjectCard.jsx","webpack:///./src/pages/index.tsx"],"names":["ProjectCard","category","title","description","thumbnail","link","ProjectCardContainer","to","ProjectCardImageContainer","className","src","alt","ProjectCardContent","ProjectCardCategory","ProjectCardTitle","ProjectCardBlurb","ProjectCardAction","Link","dimensions","maxwidthMobile","colors","blue500","primaryLight","grey600","grey200","pageQuery","BlogIndex","data","location","siteTitle","site","siteMetadata","social","authorName","author","name","posts","allMarkdownRemark","edges","map","i","node","key","frontmatter","date","fields","slug","excerpt","mainImage","publicURL"],"mappings":"gRAuBeA,EAhBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,UAAWC,EAA5C,EAA4CA,KAA5C,OAClB,YAACC,EAAD,CAAsBC,GAAIF,GACxB,YAACG,EAAD,CAA2BC,UAAU,6BACnC,mBAAKC,IAAKN,EAAWO,IAAKT,KAE5B,YAACU,EAAD,CAAoBH,UAAU,sBAC5B,YAACI,EAAD,KAAsBZ,GACtB,YAACa,EAAD,KAAmBZ,GACnB,YAACa,EAAD,KAAmBZ,GACnB,YAACa,EAAD,CAAmBP,UAAU,qBAA7B,WACU,iCAgBVH,EAAuB,YAAOW,OAAP,sBAAH,yNAUHC,IAAWC,eAVR,gKAoBXC,IAAOC,QApBI,qRA0CpBT,EAAqB,YAAO,MAAP,sBAAH,6JAYNQ,IAAOE,aAZD,0FAkBDJ,IAAWC,eAlBV,kDAwBlBN,EAAsB,YAAO,KAAP,sBAAH,yBAEdO,IAAOG,QAFO,KAKnBT,EAAmB,YAAO,KAAP,sBAAH,iEAKhBC,EAAmB,YAAO,MAAP,sBAAH,4EAKCG,IAAWC,eALZ,8BAUhBH,EAAoB,YAAO,MAAP,sBAAH,iOAcjBR,EAA4B,YAAO,MAAP,sBAAH,cACfY,IAAOI,QADQ,+GAQRN,IAAWC,eARH,kLAsBbC,IAAOE,aAtBM,2JCpElBG,EAAY,aAmCVC,UA5FG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAa7B,MACnC8B,EAASL,EAAKG,KAAKC,aAAaC,OAChCC,EAAaN,EAAKG,KAAKC,aAAaG,OAAOC,KAC3CC,EAAQT,EAAKU,kBAAkBC,MAErC,OACE,YAAC,IAAD,CAAQV,SAAUA,EAAU1B,MAAO2B,EAAWG,OAAQA,EAAQC,WAAYA,GACxE,YAAC,IAAD,MACA,YAAC,IAAD,MACCG,EAAMG,KAAI,WAASC,GAAT,IAAEC,EAAF,EAAEA,KAAF,OACT,YAAC,EAAD,CACEC,IAAKF,EACLvC,SAAUwC,EAAKE,YAAYC,KAC3B1C,MAAOuC,EAAKE,YAAYzC,OAASuC,EAAKI,OAAOC,KAC7C3C,YAAasC,EAAKE,YAAYxC,aAAesC,EAAKM,QAClD3C,UAAWqC,EAAKE,YAAYK,UAAYP,EAAKE,YAAYK,UAAUC,UAAY,KAC/E5C,KAAMoC,EAAKI,OAAOC","file":"component---src-pages-index-tsx-b6c6778f20c0b26d2b84.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"../styles/dimensions\";\nimport colors from \"../styles/colors\";\nimport PropTypes from \"prop-types\";\n\nconst ProjectCard = ({ category, title, description, thumbnail, link }) => (\n  <ProjectCardContainer to={link}>\n    <ProjectCardImageContainer className=\"ProjectCardImageContainer\">\n      <img src={thumbnail} alt={title} />\n    </ProjectCardImageContainer>\n    <ProjectCardContent className=\"ProjectCardContent\">\n      <ProjectCardCategory>{category}</ProjectCardCategory>\n      <ProjectCardTitle>{title}</ProjectCardTitle>\n      <ProjectCardBlurb>{description}</ProjectCardBlurb>\n      <ProjectCardAction className=\"ProjectCardAction\">\n        Details <span>&#8594;</span>\n      </ProjectCardAction>\n    </ProjectCardContent>\n  </ProjectCardContainer>\n);\n\nexport default ProjectCard;\n\nProjectCard.propTypes = {\n  category: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n};\n\nconst ProjectCardContainer = styled(Link)`\n  display: grid;\n  grid-template-columns: 3.5fr 7fr;\n  box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n  margin-bottom: 2em;\n  margin-top: 1.75rem;\n  transition: all 150ms ease-in-out;\n  text-decoration: none;\n  color: currentColor;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-template-columns: 1fr;\n    margin-bottom: 1.5em;\n  }\n\n  &:hover {\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n    transition: all 150ms ease-in-out;\n\n    .ProjectCardAction {\n      color: ${colors.blue500};\n      transition: all 150ms ease-in-out;\n\n      span {\n        transform: translateX(0px);\n        opacity: 1;\n        transition: transform 150ms ease-in-out;\n      }\n    }\n\n    .ProjectCardContent::before {\n      opacity: 0.02;\n      transition: all 150ms ease-in-out;\n    }\n\n    .ProjectCardImageContainer::before {\n      opacity: 0.2;\n      transition: all 150ms ease-in-out;\n    }\n  }\n`;\n\nconst ProjectCardContent = styled(\"div\")`\n  background: white;\n  padding: 2.25em 2.5em 2.25em 2.5em;\n  position: relative;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: ${colors.primaryLight};\n    mix-blend-mode: multiply;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-row: 2;\n    padding: 1.75em 2em 1.75em 2em;\n  }\n`;\n\nconst ProjectCardCategory = styled(\"h6\")`\n  font-weight: 600;\n  color: ${colors.grey600};\n`;\n\nconst ProjectCardTitle = styled(\"h3\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n`;\n\nconst ProjectCardBlurb = styled(\"div\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n  margin-bottom: 2em;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    margin-bottom: 1.25em;\n  }\n`;\n\nconst ProjectCardAction = styled(\"div\")`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n`;\n\nconst ProjectCardImageContainer = styled(\"div\")`\n  background: ${colors.grey200};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  position: relative;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    max-height: 200px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: ${colors.primaryLight};\n    mix-blend-mode: multiply;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n\n  img {\n    max-width: 400px;\n    width: 100%;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.04);\n    margin: 0;\n  }\n`;\n","import React from \"react\";\nimport { PageProps, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport ProjectCard from \"../components/ProjectCard\";\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const social = data.site.siteMetadata.social;\n  const authorName = data.site.siteMetadata.author.name;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location} title={siteTitle} social={social} authorName={authorName}>\n      <SEO />\n      <Bio />\n      {posts.map(({node}, i) => (\n        <ProjectCard\n          key={i}\n          category={node.frontmatter.date}\n          title={node.frontmatter.title || node.fields.slug}\n          description={node.frontmatter.description || node.excerpt}\n          thumbnail={node.frontmatter.mainImage ? node.frontmatter.mainImage.publicURL : null}\n          link={node.fields.slug}\n        />\n      ))}\n    </Layout>\n  );\n};\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string;\n      author: {\n        name: string;\n      }\n      social: {\n        link: string;\n        name: string;\n      };\n    };\n  };\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string;\n        frontmatter: {\n          title: string;\n          date: string;\n          description: string;\n          mainImage: {\n            publicURL: string;\n          }\n        };\n        fields: {\n          slug: string;\n        };\n      };\n    }[];\n  };\n};\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n        }\n        social {\n          link\n          name\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            mainImage {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogIndex;"],"sourceRoot":""}